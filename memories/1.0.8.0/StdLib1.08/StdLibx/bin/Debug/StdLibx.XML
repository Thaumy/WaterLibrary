<?xml version="1.0"?>
<doc>
    <assembly>
        <name>StdLibx</name>
    </assembly>
    <members>
        <member name="T:StdLib1_18.Information.ILibInformation">
            <summary>
            获取StdInf类信息的接口
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.verFirst">
            <summary>
            主版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.verSecond">
            <summary>
            次版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.devEdition">
            <summary>
            是否为开发者版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.pubEdition">
            <summary>
            是否为发行版
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.webVer">
            <summary>
            联网时的最新发行版
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.webURL">
            <summary>
            联网最新发行版的下载URL
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.compatibleLast">
            <summary>
            针对最近一次发行版的全局兼容性
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.ILibInformation.logo">
            <summary>
            获取到像素化的StdLib_logo
            </summary>
        </member>
        <member name="T:StdLib1_18.Information.LibInformation">
            <summary>
            用于获取类库信息的类
            </summary>
        </member>
        <member name="M:StdLib1_18.Information.LibInformation.#ctor">
            <summary>
            获取StdLib联网信息
            </summary>
        </member>
        <member name="M:StdLib1_18.Information.LibInformation.#ctor(System.String)">
            <summary>
            获取StdLib联网信息(第二重载，不兼容时使用)
            </summary>
            <param name="InfUrl">URL指定</param>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.verFirst">
            <summary>
            主版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.verSecond">
            <summary>
            次版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.devEdition">
            <summary>
            是否为开发者版本
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.pubEdition">
            <summary>
            是否为发行版
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.webVer">
            <summary>
            联网时的最新发行版
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.webURL">
            <summary>
            联网最新发行版的下载URL
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.compatibleLast">
            <summary>
            针对最近一次发行版的全局兼容性
            </summary>
        </member>
        <member name="P:StdLib1_18.Information.LibInformation.logo">
            <summary>
            获取到像素化的StdLib_logo
            </summary>
        </member>
        <member name="T:StdLib1_18.Algorithm.Encryptor">
            <summary>
            加密算法类
            </summary>
        </member>
        <member name="M:StdLib1_18.Algorithm.Encryptor.md5(System.String)">
            <summary>
            MD5方法
            </summary>
            <param name="str">被加密的字符串</param>
            <returns>通常返回MD5加密结果，报错则返回错误信息</returns>
        </member>
        <member name="M:StdLib1_18.Algorithm.Encryptor.hash(System.String)">
            <summary>
            散列方法
            </summary>
            <param name="str">被加密的字符串</param>
            <returns>通常返回散列加密结果，报错则返回错误信息</returns>
        </member>
        <member name="T:StdLib1_18.Algorithm.ArrayAlgorithm">
            <summary>
            矩阵算法类
            </summary>
        </member>
        <member name="F:StdLib1_18.Algorithm.ArrayAlgorithm.NumArray">
            <summary>
            存放生成的矩阵
            </summary>
        </member>
        <member name="P:StdLib1_18.Algorithm.ArrayAlgorithm.numArray">
            <summary>
            矩阵的引用访问器
            </summary>
        </member>
        <member name="M:StdLib1_18.Algorithm.ArrayAlgorithm.getIndex(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            提取矩阵有效信息索引的方法
            </summary>
            <param name="psw">密码(int):共10个整数</param>
            <param name="dic">int[] dic = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };:字典集，一共10个字符</param>
            <param name="num">int[] num = { 8, 4, 5, 5, 5, 3, 7, 9, 2, 9 };:被加密的10个整数</param>
            <returns>通常返回索引数组，报错则返回内容为-2的数组</returns>
        </member>
        <member name="T:StdLib1_18.Algorithm.PixelGraphic">
            <summary>
            PixelGraphic转码类
            </summary>
        </member>
        <member name="M:StdLib1_18.Algorithm.PixelGraphic.dePixels(System.String)">
            <summary>
            PixelGraphic解码方法
            </summary>
            <param name="stream">文件流指定</param>
            <returns>通常返回解码结果，报错则返回"StdLibError ec4580"</returns>
        </member>
        <member name="M:StdLib1_18.Algorithm.PixelGraphic.toPixels(System.String,System.String)">
            <summary>
            PixelGraphic加密方法:(第一重载)注意hex至少由4个16进制字符组成
            </summary>
            <param name="hex">被加密的16进制text(不带空格)</param>
            <param name="stream">bmp模板流</param>
            <returns>通常返回编译后的bmp，报错则返回null</returns>
        </member>
        <member name="M:StdLib1_18.Algorithm.PixelGraphic.toPixels(System.Object,System.String,System.String)">
            <summary>
            PixelGraphic加密方法:(第二重载)注意hex至少由4个16进制字符组成
            </summary>
            <param name="obj">被加密的16进制obj:text(不带空格)或者_hex(带空格)或者str[,](hex矩阵)/</param>
            <param name="stream">bmp模板流</param>
            <param name="type"></param>
            <returns>通常返回编译后的bmp，报错则返回null</returns>
        </member>
        <member name="T:StdLib1_18.Algorithm.Sorter">
            <summary>
            排序算法类
            </summary>
        </member>
        <member name="M:StdLib1_18.Algorithm.Sorter.easySort``1(``0[])">
            <summary>
            排序方法
            </summary>
            <param name="array">被排序的数组</param>
            <returns>通常返回有序数组(由小到大)，报错则返回null</returns>
        </member>
        <member name="T:StdLib1_18.Algorithm.Searcher">
            <summary>
            检索类
            </summary>
        </member>
        <member name="M:StdLib1_18.Algorithm.Searcher.binarySearch(System.Int32,System.Int32[])">
            <summary>
            二分法检索(第一重载),适用于整型检索
            </summary>
            <param name="value">被检索值</param>
            <param name="array">数组,顺序由小到大</param>
            <returns>若数组存在被检索值,则返回值在数组中的位置,若不存在则返回-1,报错则返回"StdLibError ec5880"</returns>
        </member>
        <member name="M:StdLib1_18.Algorithm.Searcher.binarySearch(System.Double,System.Double[])">
            <summary>
            二分法检索(第二重载),适用于双精度浮点检索
            </summary>
            <param name="value">被检索值</param>
            <param name="array">数组，顺序由小到大</param>
            <returns>若数组存在被检索值,则返回值在数组中的位置,若不存在则返回-1,报错则返回"StdLibError ec5881"</returns>
        </member>
        <member name="T:StdLib1_18.DataLayer.MCInformation">
            <summary>
            启动器数据层
            </summary>
        </member>
        <member name="M:StdLib1_18.DataLayer.MCInformation.#ctor">
            <summary>
            初始化运行数据（第一重载）
            </summary>
        </member>
        <member name="M:StdLib1_18.DataLayer.MCInformation.#ctor(System.String)">
            <summary>
            使用指定的文件路径初始化运行数据（第二重载）
            </summary>
            <param name="fileName">Xml运行信息文档文件路径</param>
        </member>
        <member name="P:StdLib1_18.DataLayer.MCInformation.Sys_Copyright">
            <summary>
            版权参数
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.MCInformation.Sys_Memory">
            <summary>
            运行内存
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.MCInformation.User_Name">
            <summary>
            玩家名
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.MCInformation.User_Email">
            <summary>
            电子邮箱名
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.MCInformation.User_PassWord">
            <summary>
            玩家密码
            </summary>
        </member>
        <member name="M:StdLib1_18.DataLayer.MCInformation.saveInformation(System.Boolean,System.UInt16,System.String,System.String,System.String)">
            <summary>
            保存玩家数据
            </summary>
            <param name="Saved_copyright">版权保存值</param>
            <param name="Saved_memory">运行内存保存值</param>
            <param name="Saved_name">玩家名保存值</param>
            <param name="Saved_email">电子邮箱保存值</param>
            <param name="Saved_passWord">密码保存值</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="T:StdLib1_18.DataLayer.ProgramLoader">
            <summary>
            程序启动器
            </summary>
        </member>
        <member name="M:StdLib1_18.DataLayer.ProgramLoader.run(System.String)">
            <summary>
            第一重载，启动1个应用
            </summary>
            <param name="file1">应用目录</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.ProgramLoader.run(System.String,System.String)">
            <summary>
            第二重载，启动2个应用
            </summary>
            <param name="file1">应用目录1</param>
            <param name="file2">应用目录2</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="T:StdLib1_18.DataLayer.XmlInformation">
            <summary>
            用于判定Xml输出类型的结构体
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.path">
            <summary>
            节点地址，如父节点、实节点、子节点的地址，用于XmlCreater类中除reStream、CreateXml方法外的所有方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.fileName">
            <summary>
            被创建的Xml文档的文件地址，用于XmlCreater类的CreateXml方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.xmlName">
            <summary>
            被创建的Xml文档的文件名，用于XmlCreater类的CreateXml方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.rootName">
            <summary>
            被创建的Xml文档的根元素名，用于XmlCreater类的CreateXml方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.nodeName">
            <summary>
            节点名，可表示子节点、父节点、新建空\实节点名，用于XmlCreater类的AddRealNode、AddEmptyNode、RemoveNode方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.attName">
            <summary>
            节点的属性名，用于XmlCreater类的AddRealNode、ReadAtt方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.attValue">
            <summary>
            节点的属性值，用于XmlCreater类的AddRealNode方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.innerText">
            <summary>
            节点的子文本，用于XmlCreater类的AddRealNode方法
            </summary>
        </member>
        <member name="P:StdLib1_18.DataLayer.XmlInformation.type">
            <summary>
            读取类型，可选值有"_name"、"_value"，用于XmlCreater类的ReadNode方法
            </summary>
        </member>
        <member name="T:StdLib1_18.DataLayer.XmlCreater">
            <summary>
            组标准Xml数据格式读写类
            </summary>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.reStream(System.String)">
            <summary>
            指定流的方法
            </summary>
            <param name="xStream">文件流地址</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.createXml(System.String,System.String,System.String)">
            <summary>
            创建Xml文档的方法（第一重载）
            </summary>
            <param name="fileName">Xml文档被创建的目录</param>
            <param name="xmlName">Xml文档名</param>
            <param name="rootName">根节点名</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.createXml(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            创建Xml文档的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.addRealNode(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            添加实节点的方法（第一重载）
            </summary>
            <param name="path">被指定的父节点</param>
            <param name="nodeName">新建的节点名</param>
            <param name="attName">节点的属性</param>
            <param name="attValue">节点的属性值</param>
            <param name="innerText">节点的子文本</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.addRealNode(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            添加实节点的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.addEmptyNode(System.String,System.String)">
            <summary>
            添加空节点的方法（第一重载）
            </summary>
            <param name="path">被指定的父节点</param>
            <param name="nodeName">新建的空节点名</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.addEmptyNode(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            添加空节点的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.removeNode(System.String,System.String)">
            <summary>
            删除被指定的父节点下子节点的方法（第一重载）
            </summary>
            <param name="path">被指定的父节点</param>
            <param name="nodeName">被删的子节点名</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.removeNode(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            删除被指定的父节点下子节点的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回true，报错则返回false</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.readInformation(System.String,System.String)">
            <summary>
            读取被指定的实节点的信息的方法（第一重载）
            </summary>
            <param name="path">被指定的实节点</param>
            <param name="type">被读取的信息类型</param>
            <returns>通常返回被读取的信息，传递未知的type返回"StdLibError ec1120"，报错则返回"StdLibError ec1121"</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.readInformation(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            读取被指定的实节点的信息的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回被读取的信息，传递未知的type返回"StdLibError ec1127"，报错则返回"StdLibError ec1128"</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.readAttribute(System.String,System.String)">
            <summary>
            读取被指定的实节点的属性值的方法（第一重载）
            </summary>
            <param name="path">被指定的实节点</param>
            <param name="attName">被读值的属性名</param>
            <returns>通常返回被读取属性的值，报错则返回"StdLibError ec1440"</returns>
        </member>
        <member name="M:StdLib1_18.DataLayer.XmlCreater.readAttribute(StdLib1_18.DataLayer.XmlInformation)">
            <summary>
            读取被指定的实节点的属性值的方法（第二重载）
            </summary>
            <param name="inf">Xml文档信息通用结构体</param>
            <returns>通常返回被读取属性的值，报错则返回"StdLibError ec1441"</returns>
        </member>
        <member name="T:StdLibx.Resource1">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:StdLibx.Resource1.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:StdLibx.Resource1.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:StdLibx.Resource1.StdLib_logo">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
    </members>
</doc>
